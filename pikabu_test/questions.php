
<?php 
Привет!


Мы ищем PHP-разработчика в дружную команду Пикабу 

Ежедневно Пикабу читают 1.5 млн человек. Мы помогаем, радуем и даже спасаем жизни. Наша цель - уютное сообщество с максимально интересными постами и обсуждениями. Давайте сделаем это вместе 

Вам необходимо знать PHP и MySQL, а также понимать почему у этого комментария так много плюсов :)
С нас зарплата в плюсиках и чувство удовлетворения от работы.

Когда еще вы сможете читать Пикабу и получать за это деньги?

Место жительства не имеет значения, но часовой пояс не должен отличаться от московского более чем на 1 час. Если Вам интересна вакансия, пожалуйста, ответьте на 13 теоретических и 10 практических вопросов.
Теоретическая часть
1. Почему Вы хотите быть разработчиком в команде Пикабу? 

Ответ на вопрос №1

2. Назовите плюсы и минусы работы программистом. 

Ответ на вопрос №2

3. Опишите, каким на Ваш взгляд является хороший разработчик? 

Ответ на вопрос №3

4. Опишите, каким на Ваш взгляд является хороший руководитель? 

Ответ на вопрос №4

5. Почему одни предпочитают коллективную ответственность, а другие - индивидуальную? 

Ответ на вопрос №5

6. Руководитель в отпуске, а отдел работает так же хорошо. Как Вы это объясните? 

Ответ на вопрос №6

7. Почему при одинаковых зарплатах в одних организациях люди воруют, а в других - нет? 

Ответ на вопрос №7

8. На Ваш взгляд из-за чего следует сразу уволить разработчика? 

Ответ на вопрос №8

9. Из-за чего случаются конфликты в коллективе? 

Ответ на вопрос №9

10. Расскажите случай критики, который оказался для вас полезным. 

Ответ на вопрос №10

11. Почему одни программисты стремятся применять более современные технологии и подходы, а другие предпочитают использовать старые, проверенные временем технологии? 

Ответ на вопрос №11

12. В компании "А" принято комментировать и форматировать код по принятому стандарту. В компании “Б” уделяют этому меньше времени в угоду реализации проекта в срок. Какой подход лучше и почему? 

Ответ на вопрос №12

13. Расскажите об опыте работы в IT. Как вы попали в сферу разработки? Какой был Ваш первый язык программирования? 

Ответ на вопрос №13
Практическая часть
14. Перепишите функцию calc с использованием рекурсии:

function calc($x) {
    $out = 1;
    while ($x > 1) {
        $out *= $x--;
    }
    return $out;
}

Ответ на вопрос №14
15. Напишите функцию, которая, используя регулярное выражение, будет искать в заданном тексте количество комментариев и соответствующее время их написания:

1 комментарий был оставлен 5 минут назад, а затем 3 комментария оставили 1 минуту назад. 10 комментариев было оставлено 15 часов назад. Ещё 327 комментариев оставили 7 дней назад
Функция должна вернуть массив вида:

array(
    array(1, 5),
    array(3, 1),
    array(10, 900),  // 900 = 60 минут * 15 часов
    array(327, 10080)  // 10080 = 60 минут * 7 дней
);

Ответ на вопрос №15
16. Есть 2 таблицы MySQL для хранения информации о пользователе:

CREATE TABLE `users` (
    `user_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
    `email` text,
    `password` text,
    PRIMARY KEY (`id`)
)

CREATE TABLE `user_properties` (
    `user_id` int(11) unsigned NOT NULL,
    `gender` varchar(3) DEFAULT 'муж'
        COMMENT 'допустимые значения "муж", "жен"',
    // ... много других несуществуенных полей
    // с дополнительными данными пользователя
)
Какие действия по оптимизации вы бы предприняли, если известно, что пользователей в таблице будет очень много и нужно будет делать выборки по email и/или gender пользователя? Допускается менять DDL.


Ответ на вопрос №16
17. Допустим, пользователей в таблицах из предыдущего вопроса стало очень-очень много и данные из таблиц читаются очень часто. Каким образом вы бы организовали удаление пользователей из этих таблиц?:


Ответ на вопрос №17
18. Есть массив: название сервера - вероятностный "вес" его выбора

$list = array(
    "server1" => 100,
    "server2" => 100,
    "server3" => 60,
);
Напишите функцию, которая будет делать выбор случайного сервера (ключ массива), учитывая "веса" каждого сервера (значение массива).


Ответ на вопрос №18
19. Дана функция поиска пользователей по email. Опишите, пожалуйста, какие вы видите потенциальные проблемы данной функции:

function searchUsersByEmail($email = '') {
    global $limit;
    $out = array();

    $query = 'SELECT * FROM users WHERE email LIKE ' . $email;
    if ($res = @mysql_query($query)) {
        while ($arr = @mysql_fetch_array($res)) {
            $out[] = $arr;
            if (count($out) > $limit) {
                break;
            }
        }
    }
    return $out;
}

Ответ на вопрос №19
20. Есть 5 характеристик одного пользователя в виде следующих переменных:

$isAdmin - (bool) является ли пользователь админом;
$isModerator - (bool) является ли пользователь модератором;
$isApproved - (bool) является ли пользователь подтвержденным аккаунтом;
$gender - (int) пол пользователя, возможные значения 0, 1, 2 (0 - не задан);
$visitedStoriesMode - (int) режим скрытия просмотренных постов, возможные значения 0, 1, 2.;
Представим, что данные характеристики меняются редко и их нужно часто читать из кеша (key-value хранилище, например Redis) для больших списков пользователей. Встает вопрос  объема памяти для их хранения в кеше и трафика передачи по сети при чтении и записи. Напишите, пожалуйста, наиболее эффективный алгоритм упаковки этих характеристик (cериализация), чтобы получился наименьший объем данных для их хранения и передачи.


Ответ на вопрос №20
21. Напишите, пожалуйста, какие знакомые вам шаблоны проектирования и популярные способы реализации использовались при написани следующего класса:

<?php
class Foo {

    private static $foo = null;
    private $pool = array();
    private $service;
    private $watchers = array();

    private function __constructor() {
        $this->service = new SomeService();
    }

    public static function getFoo() {
        return self::$foo !== null
            ? self::$foo
            : (self::$foo = new Foo());
    }

    public function setPort($value) {
        $this->callWatcher('change');
        $this->service->setValue('port', (string)$value);
        return $this;
    }

    public function setHost($value) {
        $this->callWatcher('change');
        $this->service->setValue('host', (string)$value);
        return $this;
    }

    public function watch($event, $func) {
        $this->watchers[$event][] = $func;
        return $this;
    }

    public function create($id) {
        if (isset($this->pool[$id])) {
            $this->callWatcher('create');
            return $this->pool[$id] = $this->service->createEntity(
                 array('id' => $id)
            );
        }
        return $this->pool[$id];
    }

    private function callWatcher($event) {
        if (isset($this->watchers[$event])) {
            array_map('call_user_func', $this->watchers[$event]);
        }
    }
}

Ответ на вопрос №21
22. Максимально сократите код следующей функции так, чтобы скорость её выполнения на большом числе запусков осталась неизменной или стала выше:

function calcDelta(array $oldTags, array $newTags) {
    $addedTags = array();
    $removedTags = array();
    foreach ($oldTags as $tag) {
        if (!in_array($tag, $newTags)) {
            $removedTags[] = mb_strtolower($tag);
        }
    }
    foreach ($newTags as $tag) {
        if (!in_array($tag, $oldTags)) {
            $addedTags[] = mb_strtolower($tag);
        }
    }
    return array($addedTags, $removedTags);
}

Ответ на вопрос №22
23. Есть таблица MySQL для хранения голосов пользователей за посты:

CREATE TABLE users_votes (
    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
    `user_id` int(11) unsigned NOT NULL,
    `story_id` int(11) unsigned NOT NULL,
    `date` timestamp NOT NULL,
    `vote` tinyint NOT NULL,
PRIMARY KEY (`id`)
);
Необходимо составить запрос к этой таблице для получения десяти самых ярых минусаторов за последние 12 месяцев: у кого суммарное количество минусов vote=-1 больше плюсов vote=1 в 20 раз. Запрос должен вернуть три колонки: user_id, количество минусов, количество плюсов


Ответ на вопрос №23
Заключительная часть
Спасибо за прохождение теста :) 
Пожалуйста, напишите Ваше имя, возраст и немного о Вашем опыте работы с языками программирования и базами данных. Также, пожалуйста, укажите ссылку на пример Вашего кода на php (github, bitbucket, dropbox и пр) 

Как Вас зовут? Напишите о себе
Ваш email для связи: 


Отправить 




